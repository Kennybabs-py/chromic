/*! For license information please see main.2a275714d3acc753245a.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatechromic("main",{"./app/index.js":(e,t,a)=>{a.r(t);var s=a("./node_modules/lodash/each.js"),i=a.n(s),n=a("./app/components/Preloader.js"),o=a("./app/components/Navigation.js"),h=a("./app/pages/Home/index.js"),p=a("./app/pages/About/index.js"),d=a("./app/pages/Collections/index.js"),r=a("./app/pages/Detail/index.js");new class{constructor(){this.createContent(),this.createPages(),this.addLinkListeners(),this.update(),this.addEventListeners(),this.createNavigation(),this.createPreloader()}createNavigation(){this.navigation=new o.default({template:this.template})}createPreloader(){this.preloader=new n.default,this.preloader.once("completed",this.onPreloaded.bind(this))}createContent(){this.content=document.querySelector(".content"),this.template=this.content.getAttribute("data-template")}createPages(){this.pages={about:new p.default,collections:new d.default,detail:new r.default,home:new h.default},this.page=this.pages[this.template],this.page.create()}onPreloaded(){this.preloader.destroy(),this.page.onResize(),this.page.show()}onPopState(){this.onChange({url:window.location.pathname,push:!1})}async onChange({url:e,push:t=!0}){await this.page.hide();const a=await window.fetch(e);if(200===a.status){const s=await a.text(),i=document.createElement("div");t&&window.history.pushState({},"",e),i.innerHTML=s;const n=i.querySelector(".content");this.content.innerHTML=n.innerHTML,this.template=n.getAttribute("data-template"),this.navigation.onChange(this.template),this.content.setAttribute("data-template",this.template),this.page=this.pages[this.template],this.page.create(),this.page.onResize(),await this.page.show(),this.addLinkListeners()}else console.log("Error",a.status)}onResize(){this.page&&this.page.onResize&&this.page.onResize()}update(){this.page&&this.page.update&&(this.page.update(),this.frame=window.requestAnimationFrame(this.update.bind(this)))}addEventListeners(){window.addEventListener("popstate",this.onPopState.bind(this)),window.addEventListener("resize",this.onResize.bind(this))}addLinkListeners(){const e=document.querySelectorAll("a");i()(e,(e=>{e.onclick=t=>{t.preventDefault();const{href:a}=e;this.onChange({url:a})}}))}}}},(function(e){e.h=()=>"c8b56dbead5042347497"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,